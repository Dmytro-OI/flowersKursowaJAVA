package gui;

import javafx.scene.control.Button;
import javafx.scene.control.ListView;
import javafx.scene.control.ComboBox;
import javafx.stage.Stage;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.testfx.api.FxRobot;
import org.testfx.framework.junit5.ApplicationTest;
import org.testfx.api.FxRobotException;
import org.hamcrest.Matchers;

import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.testfx.api.FxAssert.verifyThat;
import static org.testfx.matcher.control.LabeledMatchers.hasText;

import java.util.stream.Collectors;

public class FlowerAppGuiTest extends ApplicationTest {

    @Override
    public void start(Stage stage) throws Exception {
        new FlowerApp().start(stage);
    }

    @BeforeEach
    public void setUpEach() {
        interact(() -> {
            ComboBox<Integer> bouquetSelector = lookup(".combo-box").query();
            bouquetSelector.getItems().clear();
            ListView<String> bouquetListView = lookup(".list-view").query();
            bouquetListView.getItems().clear();
        });
        interact(() -> {
            try (java.sql.Connection conn = java.sql.DriverManager.getConnection("jdbc:sqlite:flower.db")) {
                java.sql.Statement stmt = conn.createStatement();
                stmt.execute("DELETE FROM flowers");
                stmt.execute("DELETE FROM accessories");
            } catch (java.sql.SQLException e) {
                System.err.println("–ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è –ë–î: " + e.getMessage());
            }
        });
    }

    private ComboBox<Integer> getBouquetSelector() {
        return lookup(".combo-box").query();
    }

    private ListView<String> getBouquetListView() {
        return lookup(".list-view").query();
    }

    @Test
    public void testAddBouquet_ValidAndInvalid() {
        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –±—É–∫–µ—Ç");
        write("1");
        clickOn("OK");
        sleep(500);

        verifyThat(".combo-box", combo -> ((ComboBox<?>) combo).getItems().contains(1));

        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –±—É–∫–µ—Ç");
        write("1");
        clickOn("OK");
        sleep(500);
        verifyThat(".dialog-pane .content.label", hasText("–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π ID –±—É–∫–µ—Ç–∞ (ID —É–∂–µ —ñ—Å–Ω—É—î –≤ –ø–∞–º‚Äô—è—Ç—ñ)."));
        clickOn(".dialog-pane .button");

        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –±—É–∫–µ—Ç");
        write("0");
        clickOn("OK");
        sleep(500);
        verifyThat(".dialog-pane .content.label", hasText("–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π ID –±—É–∫–µ—Ç–∞ (ID –º–∞—î –±—É—Ç–∏ > 0)."));
        clickOn(".dialog-pane .button");

        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –±—É–∫–µ—Ç");
        write("-1");
        clickOn("OK");
        sleep(500);
        verifyThat(".dialog-pane .content.label", hasText("–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π ID –±—É–∫–µ—Ç–∞ (ID –º–∞—î –±—É—Ç–∏ > 0)."));
        clickOn(".dialog-pane .button");
    }

    @Test
    public void testAddFlower_ValidAndInvalidFreshness() {
        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –±—É–∫–µ—Ç");
        write("2");
        clickOn("OK");
        sleep(500);

        clickOn(".combo-box");
        type(javafx.scene.input.KeyCode.DOWN);
        type(javafx.scene.input.KeyCode.ENTER);
        sleep(500);

        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –∫–≤—ñ—Ç–∫—É");
        write("–¢—Ä–æ—è–Ω–¥–∞");
        clickOn("OK");
        write("30");
        clickOn("OK");
        write("4");
        clickOn("OK");
        write("25");
        clickOn("OK");
        sleep(500);

        verifyThat(getBouquetListView(), list ->
                list.getItems().stream().anyMatch(s -> s.contains("–¢—Ä–æ—è–Ω–¥–∞"))
        );

        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –∫–≤—ñ—Ç–∫—É");
        write("–¢—é–ª—å–ø–∞–Ω");
        clickOn("OK");
        write("20");
        clickOn("OK");
        write("6");
        clickOn("OK");
        write("15");
        clickOn("OK");
        sleep(500);

        verifyThat(".dialog-pane .content.label", hasText("–†—ñ–≤–µ–Ω—å —Å–≤—ñ–∂–æ—Å—Ç—ñ –º–∞—î –±—É—Ç–∏ –≤—ñ–¥ 1 –¥–æ 5!"));
        clickOn(".dialog-pane .button");

        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –∫–≤—ñ—Ç–∫—É");
        write("–¢—é–ª—å–ø–∞–Ω");
        clickOn("OK");
        write("20");
        clickOn("OK");
        write("0");
        clickOn("OK");
        write("15");
        clickOn("OK");
        sleep(500);

        verifyThat(".dialog-pane .content.label", hasText("–†—ñ–≤–µ–Ω—å —Å–≤—ñ–∂–æ—Å—Ç—ñ –º–∞—î –±—É—Ç–∏ –≤—ñ–¥ 1 –¥–æ 5!"));
        clickOn(".dialog-pane .button");
    }

    @Test
    public void testSortFlowers() {
        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –±—É–∫–µ—Ç");
        write("5");
        clickOn("OK");
        sleep(500);

        clickOn(".combo-box");
        type(javafx.scene.input.KeyCode.DOWN);
        type(javafx.scene.input.KeyCode.ENTER);
        sleep(500);

        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –∫–≤—ñ—Ç–∫—É");
        write("–†–æ–∑–∞");
        clickOn("OK");
        write("20");
        clickOn("OK");
        write("5");
        clickOn("OK");
        write("20");
        clickOn("OK");
        sleep(500);

        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –∫–≤—ñ—Ç–∫—É");
        write("–¢—é–ª—å–ø–∞–Ω");
        clickOn("OK");
        write("20");
        clickOn("OK");
        write("3");
        clickOn("OK");
        write("15");
        clickOn("OK");
        sleep(500);

        clickOn("üîÉ –°–æ—Ä—Ç—É–≤–∞—Ç–∏ –∫–≤—ñ—Ç–∏");
        sleep(500);

        verifyThat(getBouquetListView(), list -> {
            String firstFlowerLine = list.getItems().stream()
                    .filter(s -> s.contains("–¢–∏–ø:"))
                    .findFirst().orElse("");
            return firstFlowerLine.contains("–¢—é–ª—å–ø–∞–Ω");
        });

        clickOn("‚ùå –í–∏–¥–∞–ª–∏—Ç–∏ –∫–≤—ñ—Ç–∫—É (–∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º)");
        write("1");
        clickOn("OK");
        sleep(500);
        clickOn("‚ùå –í–∏–¥–∞–ª–∏—Ç–∏ –∫–≤—ñ—Ç–∫—É (–∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º)");
        write("1");
        clickOn("OK");
        sleep(500);
        clickOn("üîÉ –°–æ—Ä—Ç—É–≤–∞—Ç–∏ –∫–≤—ñ—Ç–∏");
    }

    @Test
    public void testCalculateTotalCostAndFreshness() {
        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –±—É–∫–µ—Ç");
        write("6");
        clickOn("OK");
        sleep(500);

        clickOn(".combo-box");
        type(javafx.scene.input.KeyCode.DOWN);
        type(javafx.scene.input.KeyCode.ENTER);
        sleep(500);

        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –∫–≤—ñ—Ç–∫—É");
        write("–†–æ–∑–∞");
        clickOn("OK");
        write("20");
        clickOn("OK");
        write("4");
        clickOn("OK");
        write("20");
        clickOn("OK");
        sleep(500);

        clickOn("üéÄ –î–æ–¥–∞—Ç–∏ –∞–∫—Å–µ—Å—É–∞—Ä");
        write("–°—Ç—Ä—ñ—á–∫–∞");
        clickOn("OK");
        write("5");
        clickOn("OK");
        sleep(500);

        clickOn("üí∞ –ü–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ –≤–∞—Ä—Ç—ñ—Å—Ç—å");
        sleep(500);
        verifyThat(".dialog-pane .content.label", hasText("–ó–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –±—É–∫–µ—Ç–∞: 25.0 –≥—Ä–Ω"));
        clickOn(".dialog-pane .button");

        clickOn("üå∏ –ü–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ —Å–≤—ñ–∂—ñ—Å—Ç—å");
        sleep(500);
        verifyThat(".dialog-pane .content.label", hasText("–ó–∞–≥–∞–ª—å–Ω–∞ —Å–≤—ñ–∂—ñ—Å—Ç—å –±—É–∫–µ—Ç–∞: 4 (—Å–µ—Ä–µ–¥–Ω—î: 4)"));
        clickOn(".dialog-pane .button");

        clickOn("‚ùå –í–∏–¥–∞–ª–∏—Ç–∏ –∫–≤—ñ—Ç–∫—É (–∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º)");
        write("1");
        clickOn("OK");
        sleep(500);
        clickOn("üå∏ –ü–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ —Å–≤—ñ–∂—ñ—Å—Ç—å");
        sleep(500);
        verifyThat(".dialog-pane .content.label", hasText("–ó–∞–≥–∞–ª—å–Ω–∞ —Å–≤—ñ–∂—ñ—Å—Ç—å –±—É–∫–µ—Ç–∞: 0 (—Å–µ—Ä–µ–¥–Ω—î: 0)"));
        clickOn(".dialog-pane .button");
    }

    @Test
    public void testFilterFlowers() {
        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –±—É–∫–µ—Ç");
        write("7");
        clickOn("OK");
        sleep(500);

        clickOn(".combo-box");
        type(javafx.scene.input.KeyCode.DOWN);
        type(javafx.scene.input.KeyCode.ENTER);
        sleep(500);

        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –∫–≤—ñ—Ç–∫—É");
        write("–†–æ–∑–∞");
        clickOn("OK");
        write("10");
        clickOn("OK");
        write("4");
        clickOn("OK");
        write("20");
        clickOn("OK");
        sleep(500);

        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –∫–≤—ñ—Ç–∫—É");
        write("–¢—é–ª—å–ø–∞–Ω");
        clickOn("OK");
        write("30");
        clickOn("OK");
        write("3");
        clickOn("OK");
        write("15");
        clickOn("OK");
        sleep(500);

        clickOn("üîç –§—ñ–ª—å—Ç—Ä –∑–∞ –¥–æ–≤–∂–∏–Ω–æ—é —Å—Ç–µ–±–ª–∞");
        write("5");
        clickOn("OK");
        write("15");
        clickOn("OK");
        sleep(500);

        verifyThat(".dialog-pane .content.label", hasText(Matchers.containsString("–†–æ–∑–∞")));
        clickOn(".dialog-pane .button");

        clickOn("üîç –§—ñ–ª—å—Ç—Ä –∑–∞ –¥–æ–≤–∂–∏–Ω–æ—é —Å—Ç–µ–±–ª–∞");
        write("100");
        clickOn("OK");
        write("150");
        clickOn("OK");
        sleep(500);
        verifyThat(".dialog-pane .content.label", hasText("–ö–≤—ñ—Ç–∫–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ."));
        clickOn(".dialog-pane .button");
    }

    @Test
    public void testSaveAndLoadFromDatabase() {
        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –±—É–∫–µ—Ç");
        write("8");
        clickOn("OK");
        sleep(500);

        clickOn(".combo-box");
        type(javafx.scene.input.KeyCode.DOWN);
        type(javafx.scene.input.KeyCode.ENTER);
        sleep(500);

        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –∫–≤—ñ—Ç–∫—É");
        write("–†–æ–∑–∞");
        clickOn("OK");
        write("20");
        clickOn("OK");
        write("4");
        clickOn("OK");
        write("20");
        clickOn("OK");
        sleep(500);

        clickOn("üì• –ó–±–µ—Ä–µ–≥—Ç–∏ –≤ –±–∞–∑—É");
        sleep(500);
        verifyThat(".dialog-pane .content.label", hasText("–î–∞–Ω—ñ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É –±–∞–∑—É –¥–∞–Ω–∏—Ö."));
        clickOn(".dialog-pane .button");

        clickOn("‚ùå –í–∏–¥–∞–ª–∏—Ç–∏ –±—É–∫–µ—Ç");

        clickOn("üì§ –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑ –±–∞–∑–∏");
        sleep(500);
        verifyThat(".dialog-pane .content.label", hasText("–î–∞–Ω—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö."));
        clickOn(".dialog-pane .button");

        verifyThat(".combo-box", combo -> ((ComboBox<?>) combo).getItems().contains(8));

        verifyThat(getBouquetListView(), list ->
                list.getItems().stream().anyMatch(s -> s.contains("–†–æ–∑–∞"))
        );
    }

    @Test
    public void testDeleteBouquetFromDatabase() {
        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –±—É–∫–µ—Ç");
        write("9");
        clickOn("OK");
        sleep(500);

        clickOn(".combo-box");
        type(javafx.scene.input.KeyCode.DOWN);
        type(javafx.scene.input.KeyCode.ENTER);
        sleep(500);

        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –∫–≤—ñ—Ç–∫—É");
        write("–†–æ–∑–∞");
        clickOn("OK");
        write("20");
        clickOn("OK");
        write("4");
        clickOn("OK");
        write("20");
        clickOn("OK");
        sleep(500);

        clickOn("üì• –ó–±–µ—Ä–µ–≥—Ç–∏ –≤ –±–∞–∑—É");
        sleep(500);
        clickOn(".dialog-pane .button");

        clickOn("üóë –í–∏–¥–∞–ª–∏—Ç–∏ –±—É–∫–µ—Ç –∑ –ë–î");
        sleep(500);
        verifyThat(".dialog-pane .content.label", hasText("–ë—É–∫–µ—Ç #9 –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö."));
        clickOn(".dialog-pane .button");

        verifyThat(".combo-box", combo -> !((ComboBox<?>) combo).getItems().contains(9));

        clickOn("üì§ –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑ –±–∞–∑–∏");
        sleep(500);
        clickOn(".dialog-pane .button");
        verifyThat(".combo-box", combo -> !((ComboBox<?>) combo).getItems().contains(9));
    }

    @Test
    public void testAddBouquetWithExistingIdInDatabase() {
        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –±—É–∫–µ—Ç");
        write("10");
        clickOn("OK");
        sleep(500);

        clickOn(".combo-box");
        type(javafx.scene.input.KeyCode.DOWN);
        type(javafx.scene.input.KeyCode.ENTER);
        sleep(500);

        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –∫–≤—ñ—Ç–∫—É");
        write("–†–æ–∑–∞");
        clickOn("OK");
        write("20");
        clickOn("OK");
        write("4");
        clickOn("OK");
        write("20");
        clickOn("OK");
        sleep(500);

        clickOn("üì• –ó–±–µ—Ä–µ–≥—Ç–∏ –≤ –±–∞–∑—É");
        sleep(500);
        clickOn(".dialog-pane .button");

        clickOn("‚ùå –í–∏–¥–∞–ª–∏—Ç–∏ –±—É–∫–µ—Ç");

        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –±—É–∫–µ—Ç");
        write("10");
        clickOn("OK");
        sleep(500);

        verifyThat(".dialog-pane .content.label", hasText("–ë—É–∫–µ—Ç —ñ–∑ ID 10 —É–∂–µ —ñ—Å–Ω—É—î –≤ –ë–î. –í–∏ –º–æ–∂–µ—Ç–µ –¥–æ–ø–æ–≤–Ω–∏—Ç–∏ –π–æ–≥–æ."));
        clickOn(".dialog-pane .button");

        verifyThat(".combo-box", combo -> ((ComboBox<?>) combo).getItems().contains(10));

        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –∫–≤—ñ—Ç–∫—É");
        write("–¢—é–ª—å–ø–∞–Ω");
        clickOn("OK");
        write("30");
        clickOn("OK");
        write("3");
        clickOn("OK");
        write("15");
        clickOn("OK");
        sleep(500);

        clickOn("üì• –ó–±–µ—Ä–µ–≥—Ç–∏ –≤ –±–∞–∑—É");
        sleep(500);
        clickOn(".dialog-pane .button");

        clickOn("‚ùå –í–∏–¥–∞–ª–∏—Ç–∏ –±—É–∫–µ—Ç");

        clickOn("üì§ –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑ –±–∞–∑–∏");
        sleep(500);
        clickOn(".dialog-pane .button");

        verifyThat(getBouquetListView(), list ->
                list.getItems().stream().anyMatch(s -> s.contains("–†–æ–∑–∞"))
        );
        verifyThat(getBouquetListView(), list ->
                list.getItems().stream().anyMatch(s -> s.contains("–¢—é–ª—å–ø–∞–Ω"))
        );
    }

    @Test
    public void testAddDuplicateFlowerAndAccessoryToDatabase() {
        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –±—É–∫–µ—Ç");
        write("11");
        clickOn("OK");
        sleep(500);

        clickOn(".combo-box");
        type(javafx.scene.input.KeyCode.DOWN);
        type(javafx.scene.input.KeyCode.ENTER);
        sleep(500);

        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –∫–≤—ñ—Ç–∫—É");
        write("–†–æ–∑–∞");
        clickOn("OK");
        write("20");
        clickOn("OK");
        write("4");
        clickOn("OK");
        write("20");
        clickOn("OK");
        sleep(500);

        clickOn("üéÄ –î–æ–¥–∞—Ç–∏ –∞–∫—Å–µ—Å—É–∞—Ä");
        write("–°—Ç—Ä—ñ—á–∫–∞");
        clickOn("OK");
        write("5");
        clickOn("OK");
        sleep(500);

        clickOn("üì• –ó–±–µ—Ä–µ–≥—Ç–∏ –≤ –±–∞–∑—É");
        sleep(500);
        clickOn(".dialog-pane .button");

        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –∫–≤—ñ—Ç–∫—É");
        write("–†–æ–∑–∞");
        clickOn("OK");
        write("20");
        clickOn("OK");
        write("4");
        clickOn("OK");
        write("20");
        clickOn("OK");
        sleep(500);

        clickOn("üéÄ –î–æ–¥–∞—Ç–∏ –∞–∫—Å–µ—Å—É–∞—Ä");
        write("–°—Ç—Ä—ñ—á–∫–∞");
        clickOn("OK");
        write("5");
        clickOn("OK");
        sleep(500);

        clickOn("üì• –ó–±–µ—Ä–µ–≥—Ç–∏ –≤ –±–∞–∑—É");
        sleep(500);
        clickOn(".dialog-pane .button");

        clickOn("‚ùå –í–∏–¥–∞–ª–∏—Ç–∏ –±—É–∫–µ—Ç");

        clickOn("üì§ –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑ –±–∞–∑–∏");
        sleep(500);
        clickOn(".dialog-pane .button");

        verifyThat(getBouquetListView(), list ->
                list.getItems().stream().filter(s -> s.contains("–†–æ–∑–∞")).count() == 1);
        verifyThat(getBouquetListView(), list ->
                list.getItems().stream().filter(s -> s.contains("–°—Ç—Ä—ñ—á–∫–∞")).count() == 1);
    }

    @Test
    public void testActionsWithoutSelectedBouquet() {
        interact(() -> {
            System.out.println("–î–æ—Å—Ç—É–ø–Ω—ñ –∫–Ω–æ–ø–∫–∏ —É UI:");
            lookup("Button").queryAll().forEach(button ->
                    System.out.println(((Button) button).getText())
            );
        });

        sleep(1000);

        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –∫–≤—ñ—Ç–∫—É");
        sleep(500);
        verifyThat(getBouquetListView(), list ->
                list.getItems().isEmpty() || list.getItems().get(0).contains("–Ω–µ–º–∞—î –∫–≤—ñ—Ç–æ–∫"));

        clickOn("üéÄ –î–æ–¥–∞—Ç–∏ –∞–∫—Å–µ—Å—É–∞—Ä");
        sleep(500);

        clickOn("üîÉ –°–æ—Ä—Ç—É–≤–∞—Ç–∏ –∫–≤—ñ—Ç–∏");
        sleep(500);

        clickOn("üí∞ –ü–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ –≤–∞—Ä—Ç—ñ—Å—Ç—å");
        sleep(500);

        try {
            clickOn("üå∏ –ü–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ —Å–≤—ñ–∂—ñ—Å—Ç—å");
        } catch (Exception e) {
            System.err.println("–ö–Ω–æ–ø–∫–∞ 'üå∏ –ü–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ —Å–≤—ñ–∂—ñ—Å—Ç—å' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ FlowerApp.java.");
            throw e;
        }
        sleep(500);

        clickOn("üîç –§—ñ–ª—å—Ç—Ä –∑–∞ –¥–æ–≤–∂–∏–Ω–æ—é —Å—Ç–µ–±–ª–∞");
        sleep(500);

        clickOn("‚ùå –í–∏–¥–∞–ª–∏—Ç–∏ –±—É–∫–µ—Ç");
        sleep(500);

        clickOn("‚ûï –î–æ–¥–∞—Ç–∏ –±—É–∫–µ—Ç");
        write("12");
        clickOn("OK");
        sleep(500);
        verifyThat(".combo-box", combo -> ((ComboBox<?>) combo).getItems().contains(12));
    }
}